include:
  - project: TankerHQ/gitlab-ci-files
    ref: 2021-10-04-177
    file: /common.yml

############
# Workflow #
############

workflow:
  rules:
    # web pipelines for releases only
    - if: $CI_PIPELINE_SOURCE == "web" && $SDK_REACT_NATIVE_RELEASE_VERSION !~ /\A\d+\.\d+\.\d+(-(alpha|beta)\d+)?\z/
      when: never
    # we must specify version of sdk-ios/sdk-android to avoid clients upgrading them by accident
    - if: $CI_PIPELINE_SOURCE == "web" && $SDK_ANDROID_RELEASE_VERSION !~ /\A\d+\.\d+\.\d+(-(alpha|beta)-\d+)?\z/
      when: never
    - if: $CI_PIPELINE_SOURCE == "web" && $SDK_IOS_RELEASE_VERSION !~ /\A\d+\.\d+\.\d+(-(alpha|beta)\d+)?\z/
      when: never
    - if: $SDK_NATIVE_LATEST_CONAN_REFERENCE !~ /\Atanker\/(latest-stable@|(\d+\.\d+\.\d+(-(alpha|beta)\d+)?@(\w+\/\w+)?))\z/
      when: never
    # allow everything else
    - when: always

###########
# Default #
###########

default:
  before_script: &global_before_script
    - if [ $(uname) == "Darwin" ]; then security unlock-keychain -p ${DEFAULT_KEYCHAIN_PASSWORD} ~/Library/Keychains/login.keychain-db; fi
    - poetry run python -m pip install --upgrade pip
    - poetry install

##########
# Stages #
##########

stages:
  - check
  - deploy

#############################
# Default settings override #
#############################

.before-script/download-artifacts:
  before_script:
    - *global_before_script
    - poetry run python run-ci.py download-artifacts --project-id=$UPSTREAM_PROJECT_ID --pipeline-id=$UPSTREAM_PIPELINE_ID --job-name=$UPSTREAM_JOB_NAME
    - poetry run python run-ci.py reset-branch $(cat branch_name.txt)
    - poetry run python -m pip install --upgrade pip
    - poetry install

########
# Jobs #
########

.rules/check/deployed:
  rules:
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/mr/manual, rules]

check/android/deployed:
  stage: check
  extends:
    - .tags/linux
    - .rules/check/deployed
  script:
    - sudo chgrp 1000 -f /dev/kvm
    - poetry run python run-ci.py patch-sdk-version android $SDK_ANDROID_RELEASE_VERSION 
    - poetry run python run-ci.py build-and-test android
  image: registry.gitlab.com/tankerhq/docker/sdk-react-native:latest

check/android/downstream:
  stage: check
  extends:
    - .tags/linux
    - .before-script/download-artifacts
    - .rules/check/downstream/android
  script:
    - sudo chgrp 1000 -f /dev/kvm
    - poetry run python run-ci.py build-and-test android
  image: registry.gitlab.com/tankerhq/docker/sdk-react-native:latest

check/android/from-sources:
  stage: check
  extends:
    - .tags/linux
    - .rules/mr/manual
  script:
    - sudo chgrp 1000 -f /dev/kvm
    - poetry run python run-ci.py prepare android --isolate-conan-user-home --use-tanker=deployed --tanker-ref=$SDK_NATIVE_LATEST_CONAN_REFERENCE
    - poetry run python run-ci.py build-and-test android
  image: registry.gitlab.com/tankerhq/docker/sdk-react-native:latest

check/android/all-from-sources:
  stage: check
  extends:
    - .tags/linux
    - .rules/native-from-sources
  script:
    - sudo chgrp 1000 -f /dev/kvm
    - poetry run python run-ci.py prepare android --isolate-conan-user-home --use-tanker=same-as-branch
    - poetry run python run-ci.py build-and-test android
  image: registry.gitlab.com/tankerhq/docker/sdk-react-native:latest

check/ios/deployed/x86_64:
  stage: check
  extends:
    - .tags/macos/x86_64
    - .rules/check/deployed
  script:
    - poetry run python run-ci.py patch-sdk-version ios $SDK_IOS_RELEASE_VERSION 
    - poetry run python run-ci.py build-and-test ios

check/ios/downstream/x86_64:
  stage: check
  extends:
    - .tags/macos/x86_64
    - .before-script/download-artifacts
    - .rules/check/downstream/ios/x86_64
  script:
    - poetry run python run-ci.py build-and-test ios

check/ios/from-sources/x86_64:
  stage: check
  extends:
    - .tags/macos/x86_64
    - .rules/mr/manual
  script:
    - poetry run python run-ci.py prepare ios --isolate-conan-user-home --use-tanker=deployed --tanker-ref=$SDK_NATIVE_LATEST_CONAN_REFERENCE
    - poetry run python run-ci.py build-and-test ios

check/ios/all-from-sources/x86_64:
  stage: check
  extends:
    - .tags/macos/x86_64
    - .rules/native-from-sources
  script:
    - poetry run python run-ci.py prepare ios --isolate-conan-user-home --use-tanker=same-as-branch
    - poetry run python run-ci.py build-and-test ios

check/ios/deployed/arm:
  stage: check
  extends:
    - .tags/macos/arm
    - .rules/check/deployed
  script:
    - poetry run python run-ci.py patch-sdk-version ios $SDK_IOS_RELEASE_VERSION 
    - poetry run python run-ci.py build-and-test ios

check/ios/downstream/arm:
  stage: check
  extends:
    - .tags/macos/arm
    - .before-script/download-artifacts
    - .rules/check/downstream/ios/arm
  script:
    - poetry run python run-ci.py build-and-test ios


check/ios/from-sources/arm:
  stage: check
  extends:
    - .tags/macos/arm
    - .rules/mr/manual
  script:
    - poetry run python run-ci.py prepare ios --isolate-conan-user-home --use-tanker=deployed --tanker-ref=$SDK_NATIVE_LATEST_CONAN_REFERENCE
    - poetry run python run-ci.py build-and-test ios

check/ios/all-from-sources/arm:
  stage: check
  extends:
    - .tags/macos/arm
    - .rules/native-from-sources
  script:
    - poetry run python run-ci.py prepare ios --isolate-conan-user-home --use-tanker=same-as-branch
    - poetry run python run-ci.py build-and-test ios

################
# deploy stage #
################

deploy:
  stage: deploy
  extends:
    - .tags/linux
    - .rules/deploy/react-native
  script:
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > "${HOME}/.npmrc"
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py patch-sdk-version android $SDK_ANDROID_RELEASE_VERSION 
    - poetry run python run-ci.py patch-sdk-version ios $SDK_IOS_RELEASE_VERSION 
    - poetry run python run-ci.py deploy --version $SDK_REACT_NATIVE_RELEASE_VERSION
  release:
    description: sdk-react-native v$SDK_REACT_NATIVE_RELEASE_VERSION
    tag_name: v$SDK_REACT_NATIVE_RELEASE_VERSION
  image: registry.gitlab.com/tankerhq/docker/sdk-react-native:latest
